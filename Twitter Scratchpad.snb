{
   "metadata":{
      "name":"Twitter stream",
      "user_save_timestamp":"1970-01-01T01:00:00.000Z",
      "auto_save_timestamp":"1970-01-01T01:00:00.000Z",
      "language_info":{
         "name":"scala",
         "file_extension":"scala",
         "codemirror_mode":"text/x-scala"
      },
      "trusted":true,
      "customLocalRepo":"/tmp/repo",
      "customRepos":null,
      "customDeps":[
         "org.apache.spark % spark-streaming_2.11 % 2.0.1",
         "org.apache.bahir % spark-streaming-twitter_2.11 % 2.0.1",
         "- org.apache.spark % spark-core_2.11 % _",
         "- org.apache.hadoop % _ % _"
      ],
      "customImports":null,
      "customArgs":[
         "-Dtwitter4j.oauth.consumerKey=",
         "-Dtwitter4j.oauth.consumerSecret=",
         "-Dtwitter4j.oauth.accessToken=",
         "-Dtwitter4j.oauth.accessTokenSecret="
      ],
      "customSparkConf":null
   },
   "cells":[
      {
         "metadata":{
            "id":"6A7DFF31C0294C9EAEE0394B41709476"
         },
         "cell_type":"markdown",
         "source":"#Twitter example"
      },
      {
         "metadata":{
            "id":"C16F92C7E01B48F188B268415E64421C"
         },
         "cell_type":"markdown",
         "source":"## Spark streaming"
      },
      {
         "metadata":{
            "id":"5C3277C1C506408F8E5BA49AC1DB6117"
         },
         "cell_type":"markdown",
         "source":"### Create context with batch 2s "
      },
      {
         "metadata":{
            "trusted":true,
            "input_collapsed":false,
            "collapsed":false,
            "id":"AA0067EFB79149958B3A900AE5AFCFE8"
         },
         "cell_type":"code",
         "source":"import org.apache.spark.streaming.{Seconds, StreamingContext}\nimport org.apache.spark.SparkContext._\nimport org.apache.spark.streaming.twitter._\n\nval ssc = new StreamingContext(sparkContext, Seconds(2))",
         "outputs":[
            {
               "name":"stdout",
               "output_type":"stream",
               "text":"import org.apache.spark.streaming.{Seconds, StreamingContext}\nimport org.apache.spark.SparkContext._\nimport org.apache.spark.streaming.twitter._\nssc: org.apache.spark.streaming.StreamingContext = org.apache.spark.streaming.StreamingContext@3bfc711f\n"
            },
            {
               "metadata":{

               },
               "data":{
                  "text/html":""
               },
               "output_type":"execute_result",
               "execution_count":1,
               "time":"Took: 1 second 997 milliseconds, at 2017-1-3 2:19"
            }
         ]
      },
      {
         "metadata":{
            "id":"4484C70449C94E16A8C78D9C70685234"
         },
         "cell_type":"markdown",
         "source":"### Listen twitter stream "
      },
      {
         "metadata":{
            "id":"20A9B4BD62454CB5A4D0E287E47436D2"
         },
         "cell_type":"markdown",
         "source":"#### Create the twitter listeners"
      },
      {
         "metadata":{
            "trusted":true,
            "input_collapsed":false,
            "collapsed":false,
            "id":"EB22DBCE872D4CFCB647C53CC2DE05DF"
         },
         "cell_type":"code",
         "source":"val twitterStream = TwitterUtils.createStream(ssc, None)",
         "outputs":[
            {
               "name":"stdout",
               "output_type":"stream",
               "text":"twitterStream: org.apache.spark.streaming.dstream.ReceiverInputDStream[twitter4j.Status] = org.apache.spark.streaming.twitter.TwitterInputDStream@6855e4c\n"
            },
            {
               "metadata":{

               },
               "data":{
                  "text/html":""
               },
               "output_type":"execute_result",
               "execution_count":2,
               "time":"Took: 1 second 674 milliseconds, at 2017-1-3 2:19"
            }
         ]
      },
      {
         "metadata":{
            "id":"64419FD883D2429996997A9D4D0F2328"
         },
         "cell_type":"markdown",
         "source":"#### Count by hashtag and sort  "
      },
      {
         "metadata":{
            "id":"43D5947167D242A8A78EEC4DAF5F6E0E"
         },
         "cell_type":"markdown",
         "source":"##### The windows are `60s` long"
      },
      {
         "metadata":{
            "trusted":true,
            "input_collapsed":false,
            "collapsed":false,
            "id":"5E310A4D5FF446C78BB3817F62A1A075"
         },
         "cell_type":"code",
         "source":"import StreamingContext._\n\nval hashTags = twitterStream.flatMap(status => status.getText.split(\" \").filter(_.startsWith(\"#\")))\n\nval topCounts60 = hashTags.map((_, 1)).reduceByKeyAndWindow(_ + _, Seconds(60))\n                   .map{case (topic, count) => (count, topic)}\n                   .transform(_.sortByKey(false))",
         "outputs":[
            {
               "name":"stdout",
               "output_type":"stream",
               "text":"import StreamingContext._\nhashTags: org.apache.spark.streaming.dstream.DStream[String] = org.apache.spark.streaming.dstream.FlatMappedDStream@20ec53dc\ntopCounts60: org.apache.spark.streaming.dstream.DStream[(Int, String)] = org.apache.spark.streaming.dstream.TransformedDStream@7b75a166\n"
            },
            {
               "metadata":{

               },
               "data":{
                  "text/html":""
               },
               "output_type":"execute_result",
               "execution_count":3,
               "time":"Took: 2 seconds 787 milliseconds, at 2017-1-3 2:19"
            }
         ]
      },
      {
         "metadata":{
            "id":"E0972CCA304D4DFA8987A70D545DEAD7"
         },
         "cell_type":"markdown",
         "source":"##### Creating the text output to be updated by the stream of result "
      },
      {
         "metadata":{
            "trusted":true,
            "input_collapsed":false,
            "output_stream_collapsed":true,
            "collapsed":false,
            "id":"60AC3C111A1446B58845FCE7A6E4360C"
         },
         "cell_type":"code",
         "source":"val result = ul(10)",
         "outputs":[
            {
               "name":"stdout",
               "output_type":"stream",
               "text":"result: notebook.front.widgets.HtmlList = <HtmlList widget>\n"
            },
            {
               "metadata":{

               },
               "data":{
                  "text/html":""
               },
               "output_type":"execute_result",
               "execution_count":4,
               "time":"Took: 1 second 218 milliseconds, at 2017-1-3 2:19"
            }
         ]
      },
      {
         "metadata":{
            "id":"E4A60170DDAD4BE7AAA3930077EBBCA9"
         },
         "cell_type":"markdown",
         "source":"##### Let's show the 10 first hashtag every window "
      },
      {
         "metadata":{
            "trusted":true,
            "input_collapsed":false,
            "collapsed":false,
            "id":"48715C6DBBA545D7816B125E24FF00EF"
         },
         "cell_type":"code",
         "source":"// Print popular hashtags\ntopCounts60.foreachRDD(rdd => {\n  val topList = rdd.take(10).toList\n  val r = topList.map{case (count, tag) => s\"$tag: $count\"}\n  result(r)\n})",
         "outputs":[
            {
               "metadata":{

               },
               "data":{
                  "text/html":""
               },
               "output_type":"execute_result",
               "execution_count":5,
               "time":"Took: 1 second 565 milliseconds, at 2017-1-3 2:19"
            }
         ]
      },
      {
         "metadata":{
            "id":"D9E3CD42E2A84C3699AB33339A1125BD"
         },
         "cell_type":"markdown",
         "source":"###  Start listening twitter"
      },
      {
         "metadata":{
            "id":"41804962439643C185AE1EA9DADC4D86"
         },
         "cell_type":"markdown",
         "source":"This will listen the twitter stream, and the computation above will update the `resuilt` every `2s` using the last `60s` of values."
      },
      {
         "metadata":{
            "trusted":true,
            "input_collapsed":false,
            "collapsed":false,
            "id":"0EFA0691F8D3428A8745046E183D2F9F"
         },
         "cell_type":"code",
         "source":"ssc.start()",
         "outputs":[
            {
               "metadata":{

               },
               "data":{
                  "text/html":""
               },
               "output_type":"execute_result",
               "execution_count":6,
               "time":"Took: 2 seconds 542 milliseconds, at 2017-1-3 2:19"
            }
         ]
      },
      {
         "metadata":{
            "id":"3E9C0C864D7F4BDA88928C2E7234C215"
         },
         "cell_type":"markdown",
         "source":"### Stop listening twitter "
      },
      {
         "metadata":{
            "trusted":true,
            "input_collapsed":false,
            "collapsed":false,
            "id":"F6A02F8D89944ECB8857EA2DED1841D1"
         },
         "cell_type":"code",
         "source":"// commented to all 'run all' :-D\n//ssc.stop()",
         "outputs":[
            {
               "metadata":{

               },
               "data":{
                  "text/html":""
               },
               "output_type":"execute_result",
               "execution_count":8,
               "time":"Took: 1 second 491 milliseconds, at 2017-1-3 2:23"
            }
         ]
      }
   ],
   "nbformat":4
}